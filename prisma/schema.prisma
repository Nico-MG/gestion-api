generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RefundDetails {
  refund_id  Int
  product_id Int
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  refunds    Refunds  @relation(fields: [refund_id], references: [refund_id], onDelete: Cascade, onUpdate: Cascade)
  products   Products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)

  @@id([refund_id, product_id])
  @@index([product_id])
  @@index([refund_id])
}

model PurchaseDetails {
  purchase_id Int
  product_id  Int
  quantity    Int
  unit_price  Int
  line_total  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  purchases   Purchases @relation(fields: [purchase_id], references: [purchase_id], onDelete: Cascade, onUpdate: Cascade)
  products    Products  @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)

  @@id([purchase_id, product_id])
  @@index([product_id])
  @@index([purchase_id])
}

model SaleDetails {
  sale_id    Int
  product_id Int
  quantity   Int
  unit_price Int
  line_total Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  products   Products @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)
  sales      Sales    @relation(fields: [sale_id], references: [sale_id], onDelete: Cascade, onUpdate: Cascade)

  @@id([sale_id, product_id])
  @@index([product_id])
  @@index([sale_id])
}

model Refunds {
  refund_id      Int             @id @default(autoincrement())
  sale_id        Int
  code           String          @db.VarChar(20)
  date           String          @db.VarChar(20)
  description    String          @db.Text
  note_refund    String          @db.VarChar(50)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  refund_details RefundDetails[]
  sales          Sales?          @relation(fields: [sale_id], references: [sale_id], onDelete: Cascade, onUpdate: Cascade)

  @@index([sale_id])
}

model Notifications {
  notification_id Int       @id @default(autoincrement())
  product_id      Int
  title           String    @db.VarChar(20)
  description     String    @db.Text
  status          Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  products        Products? @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)

  @@index([product_id])
}

model Purchases {
  purchase_id      Int               @id @default(autoincrement())
  code             String            @db.VarChar(20)
  provider_rut     String
  user_rut         String
  date             String            @db.VarChar(20)
  total_price      Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  purchase_details PurchaseDetails[]
  providers        Providers?        @relation(fields: [provider_rut], references: [provider_rut], onDelete: Cascade, onUpdate: Cascade)
  users            Users?            @relation(fields: [user_rut], references: [user_rut], onDelete: Cascade, onUpdate: Cascade)

  @@index([provider_rut])
  @@index([user_rut])
}

model Products {
  product_id       Int               @id @default(autoincrement())
  code             String            @db.VarChar(20)
  name             String            @db.VarChar(50)
  type             String            @db.VarChar(50)
  quantity         Int
  min_quantity     Int
  price            Int
  status           Boolean           @default(true)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  refund_details   RefundDetails[]
  purchase_details PurchaseDetails[]
  sale_details     SaleDetails[]
  notifications    Notifications[]

  @@index([product_id])
}

model Providers {
  provider_rut String      @id @db.VarChar(15)
  name         String      @db.VarChar(20)
  address      String      @db.Text
  phone        String      @db.VarChar(20)
  type         String      @db.VarChar(20)
  status       Boolean     @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  purchases    Purchases[]

  @@index([provider_rut])
}

model Users {
  user_rut  String      @id @db.VarChar(15)
  mail      String      @db.VarChar(50)
  password  String      @db.VarChar(60)
  name      String      @db.VarChar(20)
  lastname  String      @db.VarChar(20)
  status    Boolean     @default(true)
  role      String      @db.VarChar(20)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  purchases Purchases[]
  sales     Sales[]

  @@index([user_rut])
}

model Sales {
  sale_id      Int           @id @default(autoincrement())
  code         String        @db.VarChar(20)
  client_rut   String        @db.VarChar(15)
  user_rut     String
  date         String        @db.VarChar(20)
  total_price  Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sale_details SaleDetails[]
  refunds      Refunds[]
  users        Users?        @relation(fields: [user_rut], references: [user_rut], onDelete: Cascade, onUpdate: Cascade)

  @@index([client_rut])
  @@index([user_rut])
}